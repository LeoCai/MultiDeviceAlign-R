cor_fc_walk = round(cor(info_walk$FC, -info_walk$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_walk$FC, -info_walk$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_WALK", cor_fc_walk,sep="_"), F)
info_run = space_sync(list(run_top, run_legr, run_legl), smoothNum = 3)
cor_fc_run = round(cor(info_run$FC, info_run$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_run$FC, info_run$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_RUN", cor_fc_run,sep="_"), F)
plotSingleData(info_run$FC, "FC_RUN",T)
info_run = space_sync(list(run_top, run_legr, run_legl), smoothNum = 3)
cor_fc_run = round(cor(info_run$FC, info_run$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_run$FC, info_run$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_RUN", cor_fc_run,sep="_"), F)
info_upjump = space_sync(list(upjump_top, upjump_legr, upjump_legl), smoothNum = 3)
cor_fc_upjump = round(cor(info_upjump$FC, info_upjump$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_run$FC, info_upjump$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_UPJUMP", cor_fc_upjump,sep="_"), F)
plotSingleData(info_upjump$FC, "FC_UP_JUMP",T)
info_upjump = space_sync(list(upjump_top, upjump_legr, upjump_legl), smoothNum = 3)
cor_fc_upjump = round(cor(info_upjump$FC, -info_upjump$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_run$FC, -info_upjump$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_UPJUMP", cor_fc_upjump,sep="_"), F)
info_forjump = space_sync(list(forjump_top, forjump_legr, forjump_legl), smoothNum = 3)
info_forjump = round(cor(info_forjump$FC, -info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1),2)
info_forjump = space_sync(list(forjump_top, forjump_legr, forjump_legl), smoothNum = 3)
cor_fc_forjump = round(cor(info_forjump$FC, -info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_forjump$FC, -info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_FORJUMP", cor_fc_forjump,sep="_"), F)
info_forjump = space_sync(list(forjump_top, forjump_legr, forjump_legl), end = 800, smoothNum = 3)
cor_fc_forjump = round(cor(info_forjump$FC, -info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_forjump$FC, -info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_FORJUMP", cor_fc_forjump,sep="_"), F)
info_forjump = space_sync(list(forjump_top, forjump_legr, forjump_legl), end = 800, smoothNum = 3)
cor_fc_forjump = round(cor(info_forjump$FC, -info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_forjump$FC, -info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_FORJUMP", cor_fc_forjump,sep="_"), F)
plotSingleData(info_forjump$FC, "FC_FORWARD_JUMP",T)
info_run = space_sync(list(run_top, run_legr, run_legl), smoothNum = 3)
cor_fc_run = round(cor(info_run$FC, info_run$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_run$FC, info_run$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_RUN", cor_fc_run,sep="_"), F)
plotSingleData(info_run$FC, "FC_RUN",T)
info_run = space_sync(list(run_top, run_legr, run_legl), smoothNum = 3)
info_walk = space_sync(list(walk_top, walk_legr, walk_legl), smoothNum = 5)
info_run = space_sync(list(run_top, run_legr, run_legl,end = 600), smoothNum = 3)
info_run = space_sync(list(run_top, run_legr, run_legl,end = 500), smoothNum = 3)
info_run = space_sync(list(run_top, run_legr, run_legl,end = 400), smoothNum = 3)
info_run = space_sync(list(run_top, run_legr, run_legl,end = 350), smoothNum = 3)
info_run = space_sync(list(run_top, run_legr, run_legl,end = 300), smoothNum = 3)
info_run = space_sync(list(run_top, run_legr, run_legl),end_id = 500, smoothNum = 3)
info_run = space_sync(list(run_top, run_legr, run_legl),end_id = 300, smoothNum = 3)
info_run = space_sync(list(run_top, run_legr, run_legl),end_id = 400, smoothNum = 3)
info_run = space_sync(list(run_top, run_legr, run_legl),end_id = 350, smoothNum = 3)
info_run = space_sync(list(run_top, run_legr, run_legl),end_id = 300, smoothNum = 3)
info_run = space_sync(list(run_top, run_legr, run_legl),end_id = 200, smoothNum = 3)
info_run = space_sync(list(run_top, run_legr, run_legl),end_id = 100, smoothNum = 3)
info_run = space_sync(list(run_top, run_legr, run_legl),end_id = 150, smoothNum = 3)
info_run = space_sync(list(run_top, run_legr, run_legl),end_id = 200, smoothNum = 3)
info_run = space_sync(list(run_top, run_legr, run_legl), smoothNum = 3)
info_walk = space_sync(list(walk_top, walk_legr, walk_legl), smoothNum = 5)
cor_fc_walk = round(cor(info_walk$FC, -info_walk$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_walk$FC, -info_walk$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_WALK", cor_fc_walk,sep="_"), T)
plotSingleData(info_walk$FC, "FC_WALK",T)
info_run = space_sync(list(run_top, run_legr, run_legl), smoothNum = 3)
cor_fc_run = round(cor(info_run$FC, info_run$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_run$FC, info_run$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_RUN", cor_fc_run,sep="_"), T)
plotSingleData(info_run$FC, "FC_RUN",T)
info_upjump = space_sync(list(upjump_top, upjump_legr, upjump_legl), smoothNum = 3)
cor_fc_upjump = round(cor(info_upjump$FC, -info_upjump$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_run$FC, -info_upjump$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_UPJUMP", cor_fc_upjump,sep="_"), T)
plotSingleData(info_upjump$FC, "FC_UP_JUMP",T)
info_forjump = space_sync(list(forjump_top, forjump_legr, forjump_legl), end = 800, smoothNum = 3)
cor_fc_forjump = round(cor(info_forjump$FC, -info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_forjump$FC, -info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_FORJUMP", cor_fc_forjump,sep="_"), T)
plotSingleData(info_forjump$FC, "FC_FORWARD_JUMP",T)
info_forjump = space_sync(list(forjump_top, forjump_legr, forjump_legl), end = 800, smoothNum = 3)
cor_fc_forjump = round(cor(info_forjump$FC, info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_forjump$FC, info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_FORJUMP", cor_fc_forjump,sep="_"), T)
info_walk = space_sync(list(walk_top, walk_legr, walk_legl), smoothNum = 5)
cor_fc_walk = round(cor(info_walk$FC, -info_walk$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_walk$FC, -info_walk$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_WALK", cor_fc_walk,sep="_"), T)
plotSingleData(info_walk$FC, "FC_WALK",T)
info_run = space_sync(list(run_top, run_legr, run_legl), smoothNum = 3)
cor_fc_run = round(cor(info_run$FC, info_run$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_run$FC, info_run$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_RUN", cor_fc_run,sep="_"), T)
plotSingleData(info_run$FC, "FC_RUN",T)
info_upjump = space_sync(list(upjump_top, upjump_legr, upjump_legl), smoothNum = 3)
cor_fc_upjump = round(cor(info_upjump$FC, -info_upjump$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_run$FC, -info_upjump$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_UPJUMP", cor_fc_upjump,sep="_"), T)
plotSingleData(info_upjump$FC, "FC_UP_JUMP",T)
info_forjump = space_sync(list(forjump_top, forjump_legr, forjump_legl), end = 800, smoothNum = 3)
cor_fc_forjump = round(cor(info_forjump$FC, info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_forjump$FC, info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_FORJUMP", cor_fc_forjump,sep="_"), T)
plotSingleData(info_forjump$FC, "FC_FORWARD_JUMP",T)
round(cor(info_forjump$FC, info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1[1,100]),2)
round(cor(info_forjump$FC[1,100], info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1[2,101]),2)
round(cor(info_forjump$FC[1:100], info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1[2:101]),2)
round(cor(info_forjump$FC[1:100], info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1[3:103]),2)
round(cor(info_forjump$FC[1:100], info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1[3:102]),2)
round(cor(info_forjump$FC[1:100], info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1[4:103]),2)
round(cor(info_forjump$FC[4:103], info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1[1:100]),2)
plotFcTop(info_forjump$FC[4:103], info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1[1:100], paste("FC_TOP_FORJUMP", cor_fc_forjump,sep="_"), T)
plotFcTop(info_forjump$FC[4:103], info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1[1:100], paste("FC_TOP_FORJUMP", cor_fc_forjump,sep="_"), F)
plotFcTop(info_forjump$FC[4:300], info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1[1:300], paste("FC_TOP_FORJUMP", cor_fc_forjump,sep="_"), F)
plotFcTop(info_forjump$FC[4:304], info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1[1:300], paste("FC_TOP_FORJUMP", cor_fc_forjump,sep="_"), F)
plotFcTop(info_forjump$FC[4:303], info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1[1:300], paste("FC_TOP_FORJUMP", cor_fc_forjump,sep="_"), F)
plotFcTop(info_forjump$FC[4:303], info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1[1:300], paste("FC_TOP_FORJUMP", cor_fc_forjump,sep="_"), F)
plotFcTop(info_forjump$FC[1:302], info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1[1:300], paste("FC_TOP_FORJUMP", cor_fc_forjump,sep="_"), F)
plotFcTop(info_forjump$FC[1:300], info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1[1:300], paste("FC_TOP_FORJUMP", cor_fc_forjump,sep="_"), F)
info_forjump = space_sync(list(forjump_top, forjump_legr, forjump_legl), end = 800, smoothNum = 3)
cor_fc_forjump = round(cor(info_forjump$FC, info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_forjump$FC, info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_FORJUMP", cor_fc_forjump,sep="_"), T)
plotSingleData(info_forjump$FC, "FC_FORWARD_JUMP",T)
info_forjump = space_sync(list(forjump_top, forjump_legr, forjump_legl), end = 800, smoothNum = 20)
cor_fc_forjump = round(cor(info_forjump$FC, info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_forjump$FC, info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_FORJUMP", cor_fc_forjump,sep="_"), T)
plotSingleData(info_forjump$FC, "FC_FORWARD_JUMP",T)
info_forjump = space_sync(list(forjump_top, forjump_legr, forjump_legl), end = 800, smoothNum = 50)
cor_fc_forjump = round(cor(info_forjump$FC, info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_forjump$FC, info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_FORJUMP", cor_fc_forjump,sep="_"), T)
info_forjump = space_sync(list(forjump_top, forjump_legr, forjump_legl), end = 800, smoothNum = 3)
cor_fc_forjump = round(cor(info_forjump$FC, info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1),2)
plotFcTop(info_forjump$FC, info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1, paste("FC_TOP_FORJUMP", cor_fc_forjump,sep="_"), T)
plotSingleData(info_forjump$FC, "FC_FORWARD_JUMP",T)
plotLinear = function(sensor_data, selected_id, file_name, writeFile = F){
sensor_data = sensor_data[selected_id, ]
linear_data = cbind(sensor_data$LinearAcc0, sensor_data$LinearAcc1, sensor_data$LinearAcc2)
if(writeFile){
png(file = paste("./new_exp/imags/",file_name,".png",sep = ""),width = 1024,height = 768)
}
matplot(linear_data, main = file_name, type = "l", lwd = 2, lty=1, cex.main = 2, cex.lab = 1.5, ylab = "accerometer(g/m^2)", xlab = "index(50HZ)")
legend("topright",legend = c("DOWN","RIGHT","FORWARD"),lty = 1,col = 1:3,cex = 2)
if(writeFile){
dev.off()
}
}
plotLinear(-walk_top, selected_id = 50:200, "WALK_TOP_LINEAR", T)
plotLinear(-run_top, selected_id = 50:150, "RUN_TOP_LINEAR", T)
plotLinear(-upjump_top, selected_id = 50:350, "UP_JUMP_TOP_LINEAR", T)
plotLinear(-forjump_top, selected_id = 50:350, "FORWARD_JUMP_TOP_LINEAR", T)
plotLinear(-walk_top, selected_id = 50:200, "WALK_TOP_LINEAR", F)
plotLinear(walk_top, selected_id = 50:200, "WALK_TOP_LINEAR", F)
plotLinear(-walk_top, selected_id = 50:200, "WALK_TOP_LINEAR", F)
plotLinear = function(sensor_data, selected_id, file_name, writeFile = F){
sensor_data = sensor_data[selected_id, ]
linear_data = cbind(sensor_data$LinearAcc0, sensor_data$LinearAcc1, sensor_data$LinearAcc2)
if(writeFile){
png(file = paste("./new_exp/imags/",file_name,".png",sep = ""),width = 1024,height = 768)
}
matplot(linear_data, main = file_name, type = "l", col = c(3,2,1), lwd = 2, lty=1, cex.main = 2, cex.lab = 1.5, ylab = "accerometer(g/m^2)", xlab = "index(50HZ)")
legend("topright",legend = c("DOWN","RIGHT","FORWARD"),col = c(3,2,1),lty = 1,col = 1:3,cex = 2)
if(writeFile){
dev.off()
}
}
plotLinear(-walk_top, selected_id = 50:200, "WALK_TOP_LINEAR", T)
plotLinear(-run_top, selected_id = 50:150, "RUN_TOP_LINEAR", T)
plotLinear(-upjump_top, selected_id = 50:350, "UP_JUMP_TOP_LINEAR", T)
plotLinear(-forjump_top, selected_id = 50:350, "FORWARD_JUMP_TOP_LINEAR", T)
plotLinear = function(sensor_data, selected_id, file_name, writeFile = F){
sensor_data = sensor_data[selected_id, ]
linear_data = cbind(sensor_data$LinearAcc0, sensor_data$LinearAcc1, sensor_data$LinearAcc2)
if(writeFile){
png(file = paste("./new_exp/imags/",file_name,".png",sep = ""),width = 1024,height = 768)
}
matplot(linear_data, main = file_name, type = "l", col = c(3,2,1), lwd = 2, lty=1, cex.main = 2, cex.lab = 1.5, ylab = "accerometer(g/m^2)", xlab = "index(50HZ)")
legend("topright",legend = c("DOWN","RIGHT","FORWARD"), col = c(3,2,1), lty = 1,col = 1:3,cex = 2)
if(writeFile){
dev.off()
}
}
plotLinear(-walk_top, selected_id = 50:200, "WALK_TOP_LINEAR", T)
debugSource('~/workspace/R/multidevicealign/new_exp/test_top_linear.R')
plotLinear = function(sensor_data, selected_id, file_name, writeFile = F){
sensor_data = sensor_data[selected_id, ]
linear_data = cbind(sensor_data$LinearAcc0, sensor_data$LinearAcc1, sensor_data$LinearAcc2)
if(writeFile){
png(file = paste("./new_exp/imags/",file_name,".png",sep = ""),width = 1024,height = 768)
}
matplot(linear_data, main = file_name, type = "l", col = c(3,2,1), lwd = 2, lty=1, cex.main = 2, cex.lab = 1.5, ylab = "accerometer(g/m^2)", xlab = "index(50HZ)")
legend("topright",legend = c("DOWN","RIGHT","FORWARD"), col = c(3,2,1), lty = 1,cex = 2)
if(writeFile){
dev.off()
}
}
plotLinear(-walk_top, selected_id = 50:200, "WALK_TOP_LINEAR", F)
plotLinear(-walk_top, selected_id = 50:200, "WALK_TOP_LINEAR", F)
plotLinear(-walk_top, selected_id = 50:200, "WALK_TOP_LINEAR", F)
plotLinear(-run_top, selected_id = 50:150, "RUN_TOP_LINEAR", F)
plotLinear(-upjump_top, selected_id = 50:350, "UP_JUMP_TOP_LINEAR", F)
plotLinear = function(sensor_data, selected_id, file_name, writeFile = F){
sensor_data = sensor_data[selected_id, ]
linear_data = cbind(sensor_data$LinearAcc0, sensor_data$LinearAcc1, sensor_data$LinearAcc2)
if(writeFile){
png(file = paste("./new_exp/imags/",file_name,".png",sep = ""),width = 1024,height = 768)
}
matplot(linear_data, main = file_name, type = "l", col = c(3,2,1), lwd = 2, lty=c(3,2,1), cex.main = 2, cex.lab = 1.5, ylab = "accerometer(g/m^2)", xlab = "index(50HZ)")
legend("topright",legend = c("DOWN","RIGHT","FORWARD"), col = c(3,2,1),lty=c(3,2,1), cex = 2)
if(writeFile){
dev.off()
}
}
plotLinear(-walk_top, selected_id = 50:200, "WALK_TOP_LINEAR", F)
plotLinear(-run_top, selected_id = 50:150, "RUN_TOP_LINEAR", F)
plotLinear(-upjump_top, selected_id = 50:350, "UP_JUMP_TOP_LINEAR", F)
plotLinear(-forjump_top, selected_id = 50:350, "FORWARD_JUMP_TOP_LINEAR", F)
plotLinear(-walk_top, selected_id = 50:200, "WALK_TOP_LINEAR", F)
plotLinear(-run_top, selected_id = 50:150, "RUN_TOP_LINEAR", F)
plotLinear(-upjump_top, selected_id = 50:350, "UP_JUMP_TOP_LINEAR", F)
plotLinear(-forjump_top, selected_id = 50:350, "FORWARD_JUMP_TOP_LINEAR", F)
plotLinear(-walk_top, selected_id = 50:200, "WALK_TOP_LINEAR", F)
plotLinear(-run_top, selected_id = 50:150, "RUN_TOP_LINEAR", F)
plotLinear(-upjump_top, selected_id = 50:350, "UP_JUMP_TOP_LINEAR", F)
plotLinear(-forjump_top, selected_id = 50:350, "FORWARD_JUMP_TOP_LINEAR", F)
plotLinear(-walk_top, selected_id = 50:200, "WALK_TOP_LINEAR", T)
plotLinear(-run_top, selected_id = 50:150, "RUN_TOP_LINEAR", T)
plotLinear(-upjump_top, selected_id = 50:350, "UP_JUMP_TOP_LINEAR", T)
plotLinear(-forjump_top, selected_id = 50:350, "FORWARD_JUMP_TOP_LINEAR", T)
source("./test_resultant_acc.R")
info_walk = space_sync(list(walk_top, walk_legr, walk_legl), smoothNum = 5)
resultantPlot(-info_walk$smothed_aligned_data_set, "RUN_RESULTANT_ACCEROMETER",c(20:80),F)
debugSource('~/workspace/R/multidevicealign/new_exp/test_resultant_acc.R')
sensor_data_set[[1]]
sensor_data_set
-info_walk$smothed_aligned_data_set
info_walk$smothed_aligned_data_set
resultantPlot(info_walk$smothed_aligned_data_set, "RUN_RESULTANT_ACCEROMETER",c(20:80),F)
source('~/workspace/R/multidevicealign/new_exp/test_resultant_acc.R')
resultantPlot(info_walk$smothed_aligned_data_set, "RUN_RESULTANT_ACCEROMETER",c(20:80),F)
resultantPlot(info_walk$smothed_aligned_data_set, "RUN_RESULTANT_ACCEROMETER",c(20:200),F)
resultantPlot(info_walk$smothed_aligned_data_set, "WALK_RESULTANT_ACCEROMETER",c(20:200),F)
resultantPlot(info_run$smothed_aligned_data_set, "WALK_RESULTANT_ACCEROMETER",c(20:200),F)
info_walk = space_sync(list(walk_top, walk_legr, walk_legl), smoothNum = 5)
info_run = space_sync(list(run_top, run_legr, run_legl), smoothNum = 3)
180 - 152.5808
180- 175.6886
180 - 177.8893
info_forjump = space_sync(list(forjump_top, forjump_legr, forjump_legl), end = 800, smoothNum = 3)
info_forjump = space_sync(list(forjump_top, forjump_legr, forjump_legl), end = 800, smoothNum = 3)
cor_fc_forjump = round(cor(info_forjump$FC, info_forjump$smothed_aligned_data_set[[1]]$ConvertedData1),2)
cor_fc_forjump
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 0, end = 300)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 0, end = 200)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 50, end = 200)
testAlign = function(data1, data2,s1,e1,tag = "") {
c1 = sqrt(data1$Acc0 ^ 2 + data1$Acc1 ^ 2 + data1$Acc2 ^ 2)
c2 = sqrt(data2$Acc0 ^ 2 + data2$Acc1 ^ 2 + data2$Acc2 ^ 2)
data1_selected = c1[s1:e1]
maxCor = 0; best_start2 = s1; best_end2 = e1; range = round(s1 / 2)
for (i in 1:range) {
s2 = s1 - range / 2 + i; e2 = e1 - range / 2 + i
data2_selected = c2[s2:e2]
cvdata = cor(data1_selected,data2_selected)
if (cvdata > maxCor) { best_start2 = s2; best_end2 = e2; maxCor = cvdata}
}
data2_selected = c2[best_start2:best_end2]
matplot(1:length(data1_selected),cbind(data1_selected, data2_selected),type = "l",main = paste(tag,round(maxCor, 4)))
return (best_start2:best_end2)
}
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 50, end = 200)
matplot(cbind(aligned_data_set[[1]]$ResultantAcc, aligned_data_set[[2]]$ResultantAcc),type= "l")
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 50, end = 200)
matplot(cbind(aligned_data_set[[1]]$ResultantAcc, aligned_data_set[[2]]$ResultantAcc),type= "l")
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 50, end = 200)
matplot(cbind(aligned_data_set[[1]]$ResultantAcc, aligned_data_set[[2]]$ResultantAcc),type= "l")
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 50, end = 200)
matplot(cbind(aligned_data_set[[1]]$ResultantAcc, aligned_data_set[[2]]$ResultantAcc),type= "l")
matplot(cbind(aligned_data_set[[1]]$ResultantAcc, aligned_data_set[[3]]$ResultantAcc),type= "l")
matplot(cbind(aligned_data_set[[2]]$ResultantAcc, aligned_data_set[[3]]$ResultantAcc),type= "l")
testAlign = function(data1, data2,s1,e1,tag = "") {
c1 = sqrt(data1$LinearAcc0 ^ 2 + data1$LinearAcc1 ^ 2 + data1$LinearAcc2 ^ 2)
c2 = sqrt(data2$LinearAcc0 ^ 2 + data2$LinearAcc1 ^ 2 + data2$LinearAcc2 ^ 2)
data1_selected = c1[s1:e1]
maxCor = 0; best_start2 = s1; best_end2 = e1; range = round(s1 / 2)
for (i in 1:range) {
s2 = s1 - range / 2 + i; e2 = e1 - range / 2 + i
data2_selected = c2[s2:e2]
cvdata = cor(data1_selected,data2_selected)
if (cvdata > maxCor) { best_start2 = s2; best_end2 = e2; maxCor = cvdata}
}
data2_selected = c2[best_start2:best_end2]
matplot(1:length(data1_selected),cbind(data1_selected, data2_selected),type = "l",main = paste(tag,round(maxCor, 4)))
return (best_start2:best_end2)
}
info_walk = space_sync(list(walk_top, walk_legr, walk_legl), smoothNum = 5)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 50, end = 200)
matplot(cbind(aligned_data_set[[2]]$ResultantAcc, aligned_data_set[[3]]$ResultantAcc),type= "l")
matplot(cbind(walk_top$ResultantAcc, walk_legr$ResultantAcc),type= "l")
matplot(cbind(walk_top$ResultantAcc[1:100,], walk_legr$ResultantAcc[1:100,]),type= "l")
matplot(cbind(walk_top$ResultantAcc[1:100], walk_legr$ResultantAcc[1:100]),type= "l")
matplot(cbind(walk_top$ResultantAcc[50:200], walk_legr$ResultantAcc[50:200]),type= "l")
matplot(cbind(walk_legl$ResultantAcc[50:200], walk_legr$ResultantAcc[50:200]),type= "l")
info_walk = space_sync(list(walk_top, walk_legr, walk_legl), smoothNum = 5)
info_walk = space_sync(list(walk_top, walk_legr, walk_legl), start_id = 100, end_id = 200, smoothNum = 5)
info_walk = space_sync(list(walk_top, walk_legr, walk_legl), start_id = 100, end_id = 500, smoothNum = 5)
info_walk = space_sync(list(walk_top, walk_legr, walk_legl), start_id = 100, end_id = 600, smoothNum = 5)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 100, end = 600)
matplot(cbind(aligned_data_set[[2]], walk_legr$ResultantAcc[[3]]),type= "l")
matplot(cbind(aligned_data_set[[2]], aligned_data_set[[3]]),type= "l")
matplot(cbind(aligned_data_set[[2]]$ResultantAcc, aligned_data_set[[3]]$ResultantAcc),type= "l")
aligned_data_set = alignData(list(forjump_top, forjump_legr, forjump_legl), end = 800)
matplot(cbind(aligned_data_set[[2]]$ResultantAcc, aligned_data_set[[3]]$ResultantAcc),type= "l")
info_walk = space_sync(list(walk_top, walk_legr, walk_legl), start_id = 100, end_id = 600, smoothNum = 5)
info_walk = space_sync(list(walk_top, walk_legr, walk_legl), start_id = 100, end_id = 600, smoothNum = 5)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 100, end = 600)
matplot(cbind(aligned_data_set[[2]]$ResultantAcc, aligned_data_set[[3]]$ResultantAcc),type= "l")
info_walk = space_sync(list(walk_top, walk_legr, walk_legl), start_id = 150, end_id = 800, smoothNum = 5)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 150, end = 800)
matplot(cbind(aligned_data_set[[2]]$ResultantAcc, aligned_data_set[[3]]$ResultantAcc),type= "l")
matplot(cbind(aligned_data_set[[2]]$ResultantAcc[50:200], aligned_data_set[[3]]$ResultantAcc[50:200]),type= "l")
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 100, end = 800)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 150, end = 800)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 200, end = 800)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 150, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set)
resultantPlot(smoothed_data_set, "RUN_RESULTANT_ACCEROMETER",c(20:80),F)
resultantPlot(smoothed_data_set, "RUN_RESULTANT_ACCEROMETER",c(1:500),F)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 200, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "RUN_RESULTANT_ACCEROMETER",c(1:500),F)
aligned_data_set = alignData(list(run_top, run_legr, run_legl), start = 200, end = 800)
aligned_data_set = alignData(list(run_top, run_legr, run_legl), start = 100, end = 500)
aligned_data_set = alignData(list(run_top, run_legr, run_legl), start = 100, end = 300)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "RUN_RESULTANT_ACCEROMETER",c(1:500),F)
resultantPlot(smoothed_data_set, "RUN_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(forjump_top, forjump_legr, forjump_legl), start = 200, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "RUN_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 200, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "RUN_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(run_top, run_legr, run_legl), start = 100, end = 300)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "RUN_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(forjump_top, forjump_legr, forjump_legl), start = 200, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "RUN_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 200, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "RUN_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(run_top, run_legr, run_legl), start = 100, end = 300)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "RUN_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(forjump_top, forjump_legr, forjump_legl), start = 200, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "RUN_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 200, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "WALK_ALINED_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(run_top, run_legr, run_legl), start = 100, end = 300)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "RUN_ALINED_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(forjump_top, forjump_legr, forjump_legl), start = 200, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "FORJUMP_ALINED_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 20, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "WALK_ALINED_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 1, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "WALK_ALINED_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 20, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "WALK_ALINED_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 100, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "WALK_ALINED_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 200, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "WALK_ALINED_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 300, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "WALK_ALINED_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 400, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "WALK_ALINED_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 500, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 400, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "WALK_ALINED_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 600, end = 800)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 400, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "WALK_ALINED_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 400, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "WALK_ALINED_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(run_top, run_legr, run_legl), start = 100, end = 300)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "RUN_ALINED_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(forjump_top, forjump_legr, forjump_legl), start = 200, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "FORJUMP_ALINED_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(forjump_top, forjump_legr, forjump_legl), start = 300, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "FORJUMP_ALINED_RESULTANT_ACCEROMETER",c(1:200),F)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 400, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "WALK_ALINED_RESULTANT_ACCEROMETER",c(1:200),T)
aligned_data_set = alignData(list(run_top, run_legr, run_legl), start = 100, end = 300)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "RUN_ALINED_RESULTANT_ACCEROMETER",c(1:200),T)
aligned_data_set = alignData(list(forjump_top, forjump_legr, forjump_legl), start = 300, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "FORJUMP_ALINED_RESULTANT_ACCEROMETER",c(1:200),T)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 400, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "WALK_ALINED_RESULTANT_ACCEROMETER",c(1:150),T)
aligned_data_set = alignData(list(run_top, run_legr, run_legl), start = 100, end = 300)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "RUN_ALINED_RESULTANT_ACCEROMETER",c(1:150),T)
aligned_data_set = alignData(list(forjump_top, forjump_legr, forjump_legl), start = 300, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "FORJUMP_ALINED_RESULTANT_ACCEROMETER",c(1:150),T)
resultantPlot = function(sensor_data_set, plot_name, selected_id, writeFile = F){
cp_action_diff_pos = c()
for(i in 1:length(sensor_data_set)){
sensor_data = sensor_data_set[[i]][selected_id,]
resultant_linear_acc = sqrt(sensor_data$LinearAcc0^2 + sensor_data$LinearAcc1^2 + sensor_data$LinearAcc2^2)
cp_action_diff_pos = cbind(cp_action_diff_pos, resultant_linear_acc)
}
cp_action_diff_pos = rollapply(cp_action_diff_pos, 3, mean)
if(writeFile){
png(file = paste("./new_exp/imags/",plot_name,".png",sep = ""),width = 1024,height = 768)
}
matplot(cp_action_diff_pos, type="l", main = plot_name,lwd = 2,lty=1,cex.main = 2,cex.lab = 1.5,ylab = "accerometer(g/m^2)",xlab = "index(50HZ)")
legend("topright",legend = c("top","legl","legr"),lty = 1,col = 1:3,cex = 2)
if(writeFile){
dev.off()
}
}
resultantPlot(list(walk_top,walk_legl,walk_legr), "WALK_RESULTANT_ACCEROMETER",c(400:550),T)
resultantPlot(list(run_top,run_legl,run_legr), "RUN_RESULTANT_ACCEROMETER",c(100:250),T)
resultantPlot(list(forjump_top,forjump_legl,forjump_legr), "forwardjump_resultant_accerometer",c(300:450),T)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 400, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "WALK_ALINED_RESULTANT_ACCEROMETER",c(1:150),T)
aligned_data_set = alignData(list(run_top, run_legr, run_legl), start = 100, end = 300)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "RUN_ALINED_RESULTANT_ACCEROMETER",c(1:150),T)
aligned_data_set = alignData(list(forjump_top, forjump_legr, forjump_legl), start = 300, end = 800)
smoothed_data_set = sensorSmooth(aligned_data_set)
resultantPlot(smoothed_data_set, "FORJUMP_ALINED_RESULTANT_ACCEROMETER",c(1:150),T)
resultantPlot(list(forjump_top,forjump_legl,forjump_legr), "FORJUMP_RESULTANT_ACCEROMETER",c(300:450),T)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 400, end = 800)
resultantPlot(smoothed_data_set, "WALK_ALINED_RESULTANT_ACCEROMETER",c(1:150),T)
resultantPlot(smoothed_data_set, "WALK_ALINED_RESULTANT_ACCEROMETER",c(1:150),F)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 400, end = 800)
resultantPlot(smoothed_data_set, "WALK_ALINED_RESULTANT_ACCEROMETER",c(1:150),T)
aligned_data_set = alignData(list(run_top, run_legr, run_legl), start = 100, end = 300)
resultantPlot(smoothed_data_set, "RUN_ALINED_RESULTANT_ACCEROMETER",c(1:150),T)
aligned_data_set = alignData(list(forjump_top, forjump_legr, forjump_legl), start = 300, end = 800)
resultantPlot(smoothed_data_set, "FORJUMP_ALINED_RESULTANT_ACCEROMETER",c(1:150),T)
aligned_data_set = alignData(list(walk_top, walk_legr, walk_legl), start = 400, end = 800)
resultantPlot(aligned_data_set, "WALK_ALINED_RESULTANT_ACCEROMETER",c(1:150),T)
aligned_data_set = alignData(list(run_top, run_legr, run_legl), start = 100, end = 300)
resultantPlot(aligned_data_set, "RUN_ALINED_RESULTANT_ACCEROMETER",c(1:150),T)
aligned_data_set = alignData(list(forjump_top, forjump_legr, forjump_legl), start = 300, end = 800)
resultantPlot(aligned_data_set, "FORJUMP_ALINED_RESULTANT_ACCEROMETER",c(1:150),T)
resultantPlot(list(run_top,run_legl,run_legr), "RUN_RESULTANT_ACCEROMETER",c(100:150),F)
resultantPlot(list(run_top,run_legl,run_legr), "RUN_RESULTANT_ACCEROMETER",c(100:150),T)
resultantPlot(aligned_data_set, "RUN_ALINED_RESULTANT_ACCEROMETER",c(1:50),T)
resultantPlot(aligned_data_set, "RUN_ALINED_RESULTANT_ACCEROMETER",c(1:100),T)
aligned_data_set = alignData(list(run_top, run_legr, run_legl), start = 100, end = 300)
resultantPlot(aligned_data_set, "RUN_ALINED_RESULTANT_ACCEROMETER",c(1:100),T)
resultantPlot(list(run_top,run_legl,run_legr), "RUN_RESULTANT_ACCEROMETER",c(100:200),T)
plotLinear = function(sensor_data, selected_id, file_name, writeFile = F){
sensor_data = sensor_data[selected_id, ]
linear_data = cbind(sensor_data$LinearAcc0, sensor_data$LinearAcc1, sensor_data$LinearAcc2)
if(writeFile){
png(file = paste("./new_exp/imags/",file_name,".png",sep = ""),width = 1024,height = 768)
}
matplot(linear_data, main = file_name, type = "l", col = c(3,2,1), lwd = 2, lty=c(3,2,1), cex.main = 2, cex.lab = 1.5, ylab = "accerometer(g/m^2)", xlab = "index(50HZ)")
legend("topright",legend = c("RIGHT","DOWN","FORWARD"), col = c(3,2,1),lty=c(3,2,1), cex = 2)
if(writeFile){
dev.off()
}
}
plotLinear(-walk_top, selected_id = 50:200, "WALK_TOP_LINEAR", T)
plotLinear(-run_top, selected_id = 50:150, "RUN_TOP_LINEAR", T)
plotLinear(-upjump_top, selected_id = 50:350, "UP_JUMP_TOP_LINEAR", T)
plotLinear(-forjump_top, selected_id = 50:350, "FORWARD_JUMP_TOP_LINEAR", T)
install.packages("Rwave")
?cwt
library(Rwave)
?cwt
?dwt
?cwt
walk_top
cwt(walk_top)
cwt(walk_top,noctave = 2)
cwt(walk_top$ResultantAcc,noctave = 2)
cwt(walk_top$ResultantAcc,noctave = 2,plot = T)
cwt(walk_top$ResultantAcc,noctave = 2,plot = F)
ks = cwt(walk_top$ResultantAcc,noctave = 2,plot = F)
cf = cwt(walk_top$ResultantAcc,noctave = 2,plot = F)
f= walk_top$ResultantAcc
t.axis=seq(0,(length(f)-1)/s.freq,by=1/s.freq) #a time axis to be used in later plots
t.axis=seq(0,(length(f)-1)/50,by=1/50) #a time axis to be used in later plots
scale=1:dim(cf)[2] #a dummy axis to be used to display decreasing frequencies
names(scale)=floor(scaleToFreq(scales(octaves,voices),0.8125,1/(s.freq),plot=F))
image(t.axis,scale,abs(coef)^2,yaxt="n",ylab="Frequency",xlab="Time",main="Scalogram",col=grey(seq(0,1,length=1024)))
image(t.axis,scale,abs(cf)^2,yaxt="n",ylab="Frequency",xlab="Time",main="Scalogram",col=grey(seq(0,1,length=1024)))
image(t.axis,scale,abs(cf)^2,yaxt="n",ylab="Frequency",xlab="Time",main="Scalogram",col=grey(seq(0,1,length=1024)))
abs(cf)^2
scale
image(t.axis,scale,abs(cf)^2,yaxt="n",ylab="Frequency",xlab="Time",main="Scalogram",col=grey(seq(0,1,length=1024)))
?image
t.axis
length(t.axis)
cf
length(t.axis)
matplot(x=t.axis,Re(cf),ylab="Spectrum",xlab="Time",type="l",main="Wavelet Decomposition")
matplot(x=t.axis,Re(cf),ylab="Spectrum",xlab="Time",type="l",main="Wavelet Decomposition")
Re(cf)
matplot(x=t.axis,Re(cf),ylab="Spectrum",xlab="Time",type="l",main="Wavelet Decomposition")
cf
matplot(x=t.axis,Re(cf),ylab="Spectrum",xlab="Time",type="l",main="Wavelet Decomposition")
matplot(x=1:2,y = 1:2)
