source("./new_exp/new_space_sync.R")
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "walk", i)
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 2,start_id = 1,end_id = 300, noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "walk", i)
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 2,start_id = 1,end_id = 200, noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
library(zoo)
# source("./new_exp/test_read.R")
source("./new_exp/read_func.R")
source("./utils.R")
source("./getMatrixByMag.R")
source("./new_exp/data_plot_func.R")
# source("./test_resultant_acc.R")
source("./rotate_max_target_func.R")
source("./new_exp/cut_func.R")
source("./new_exp/integral_forward_left_func.R")
source("./new_exp/compare_mag_top_linear_func.R")
source("./new_exp/new_space_sync.R")
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "walk", i)
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 2,start_id = 1,end_id = 300, noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "walk", i)
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 2,start_id = 1,end_id = 300, noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
library(zoo)
# source("./new_exp/test_read.R")
source("./new_exp/read_func.R")
source("./utils.R")
source("./getMatrixByMag.R")
source("./new_exp/data_plot_func.R")
# source("./test_resultant_acc.R")
source("./rotate_max_target_func.R")
source("./new_exp/cut_func.R")
source("./new_exp/integral_forward_left_func.R")
source("./new_exp/compare_mag_top_linear_func.R")
source("./new_exp/new_space_sync.R")
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "walk", i)
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum =1,start_id = 1,end_id = 300, noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "walk", i)
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum =5,start_id = 1,end_id = 300, noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "walk", i)
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum =10,start_id = 1,end_id = 300, noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "run", i)
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum =10,start_id = 1,end_id = 300, noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "run", i)
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum =10,start_id = 1,end_id = 20, noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
library(zoo)
# source("./new_exp/test_read.R")
source("./new_exp/read_func.R")
source("./utils.R")
source("./getMatrixByMag.R")
source("./new_exp/data_plot_func.R")
# source("./test_resultant_acc.R")
source("./rotate_max_target_func.R")
source("./new_exp/cut_func.R")
source("./new_exp/integral_forward_left_func.R")
source("./new_exp/compare_mag_top_linear_func.R")
source("./new_exp/new_space_sync.R")
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "run", i)
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum =10,start_id = 1,end_id = 60, noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
library(zoo)
# source("./new_exp/test_read.R")
source("./new_exp/read_func.R")
source("./utils.R")
source("./getMatrixByMag.R")
source("./new_exp/data_plot_func.R")
# source("./test_resultant_acc.R")
source("./rotate_max_target_func.R")
source("./new_exp/cut_func.R")
source("./new_exp/integral_forward_left_func.R")
source("./new_exp/compare_mag_top_linear_func.R")
source("./new_exp/new_space_sync.R")
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "run", i)
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum =10,start_id = 1,end_id = 60, noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "run", i)
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum =10,start_id = 1,end_id = 200, noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "run", i)
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum =1,start_id = 1,end_id = 200, noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "run", i)
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum =1,start_id = 1,end_id = 100, noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "walk", i)
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum =1,start_id = 1,end_id = 20, noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "walk", i)
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum =1,start_id = 1,end_id = 50, noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "walk", i)
s = 1
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum =1,start_id = s,end_id = (s+50), noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "walk", i)
s = 50
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum =1,start_id = s,end_id = (s+50), noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "walk", i)
s = 100
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum =1,start_id = s,end_id = (s+50), noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "walk", i)
s = 150
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum =1,start_id = s,end_id = (s+50), noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
for(i in 1:5){
# i = 1
ds_i = readDataSet("./new_exp/datas/run_walk_native_gravity/", "walk", i)
s = 200
rs_pre = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum =1,start_id = s,end_id = (s+50), noise_remove_func = NULL)
fr = paste("P:", rs_pre$final_results[[1]]$offset_result, rs_pre$final_results[[2]]$offset_result, rs_pre$final_results[[3]]$offset_result, sep=",  ")
print(fr, quote = F)
# rs_filted = space_sync(sensor_data_set = ds_i, aligned = F,smoothNum = 3,start_id = 1,end_id = 300, noise_remove_func = noise_remove_func_1)
# fr = paste("A:", rs_filted$final_results[[1]]$offset_result, rs_filted$final_results[[2]]$offset_result, rs_filted$final_results[[3]]$offset_result, sep=",  ")
# print(fr, quote = F)
}
walk_top = read.csv("./new_exp/datas/performace/top.csv")
walk_top
sapply(walk_top, mean)
walk_top = read.csv("./new_exp/datas/performace/top.csv",header = F)
sapply(walk_top, mean)
sapply(walk_top, mean)
sapply(walk_top, sd)
walk_top = read.csv("./new_exp/datas/performace/top.csv",header = F)
walk_lefthand = read.csv("./new_exp/datas/performace/Lefthand.csv",header = F)
walk_righthand = read.csv("./new_exp/datas/performace/Righthand.csv",header = F)
walk_leftpants = read.csv("./new_exp/datas/performace/Leftpants.csv",header = F)
walk_rightpants = read.csv("./new_exp/datas/performace/Rightpants.csv",header = F)
sapply(walk_top, mean)
sapply(walk_top, sd)
displayPerformance = function(da){
mean_da = sapply(da, mean)
sd_da = sapply(da, sd)
return(c(mean_da, sd_da))
}
walk_top = read.csv("./new_exp/datas/performace/top.csv",header = F)
walk_lefthand = read.csv("./new_exp/datas/performace/Lefthand.csv",header = F)
walk_righthand = read.csv("./new_exp/datas/performace/Righthand.csv",header = F)
walk_leftpants = read.csv("./new_exp/datas/performace/Leftpants.csv",header = F)
walk_rightpants = read.csv("./new_exp/datas/performace/Rightpants.csv",header = F)
displayPerformance = function(da){
mean_da = sapply(da, mean)
sd_da = sapply(da, sd)
return(c(mean_da, sd_da))
}
displayPerformance(walk_top)
walk_top = read.csv("./new_exp/datas/performace/top.csv",header = F)
walk_lefthand = read.csv("./new_exp/datas/performace/Lefthand.csv",header = F)
walk_righthand = read.csv("./new_exp/datas/performace/Righthand.csv",header = F)
walk_leftpants = read.csv("./new_exp/datas/performace/Leftpants.csv",header = F)
walk_rightpants = read.csv("./new_exp/datas/performace/Rightpants.csv",header = F)
displayPerformance = function(da){
mean_da = sapply(da, mean)
sd_da = sapply(da, sd)
return(c(mean_da, sd_da))
}
displayPerformance(walk_top)
displayPerformance(walk_lefthand)
displayPerformance(walk_righthand)
displayPerformance(walk_leftpants)
displayPerformance(walk_rightpants)
walk_top = read.csv("./new_exp/datas/performace/top.csv",header = F)
walk_lefthand = read.csv("./new_exp/datas/performace/Lefthand.csv",header = F)
walk_righthand = read.csv("./new_exp/datas/performace/Righthand.csv",header = F)
walk_leftpants = read.csv("./new_exp/datas/performace/Leftpants.csv",header = F)
walk_rightpants = read.csv("./new_exp/datas/performace/Rightpants.csv",header = F)
displayPerformance = function(da){
mean_da = sapply(da, mean)
sd_da = sapply(da, sd)
plot(da,type="l")
return(c(mean_da, sd_da))
}
displayPerformance(walk_top)
displayPerformance(walk_lefthand)
displayPerformance(walk_righthand)
displayPerformance(walk_leftpants)
displayPerformance(walk_rightpants)
walk_top = read.csv("./new_exp/datas/performace/top.csv",header = F)
walk_lefthand = read.csv("./new_exp/datas/performace/Lefthand.csv",header = F)
walk_righthand = read.csv("./new_exp/datas/performace/Righthand.csv",header = F)
walk_leftpants = read.csv("./new_exp/datas/performace/Leftpants.csv",header = F)
walk_rightpants = read.csv("./new_exp/datas/performace/Rightpants.csv",header = F)
displayPerformance = function(da){
mean_da = sapply(da, mean)
sd_da = sapply(da, sd)
plot(da)
return(c(mean_da, sd_da))
}
displayPerformance(walk_top)
displayPerformance(walk_lefthand)
displayPerformance(walk_righthand)
displayPerformance(walk_leftpants)
displayPerformance(walk_rightpants)
walk_top = read.csv("./new_exp/datas/performace/top.csv",header = F)
walk_lefthand = read.csv("./new_exp/datas/performace/Lefthand.csv",header = F)
walk_righthand = read.csv("./new_exp/datas/performace/Righthand.csv",header = F)
walk_leftpants = read.csv("./new_exp/datas/performace/Leftpants.csv",header = F)
walk_rightpants = read.csv("./new_exp/datas/performace/Rightpants.csv",header = F)
displayPerformance = function(da){
mean_da = sapply(da, mean)
sd_da = sapply(da, sd)
plot(da[,1])
return(c(mean_da, sd_da))
}
displayPerformance(walk_top)
displayPerformance(walk_lefthand)
displayPerformance(walk_righthand)
displayPerformance(walk_leftpants)
displayPerformance(walk_rightpants)
walk_top = read.csv("./new_exp/datas/performace/top.csv",header = F)
walk_lefthand = read.csv("./new_exp/datas/performace/Lefthand.csv",header = F)
walk_righthand = read.csv("./new_exp/datas/performace/Righthand.csv",header = F)
walk_leftpants = read.csv("./new_exp/datas/performace/Leftpants.csv",header = F)
walk_rightpants = read.csv("./new_exp/datas/performace/Rightpants.csv",header = F)
displayPerformance = function(da){
mean_da = sapply(da, mean)
sd_da = sapply(da, sd)
plot(da[,1],type="l")
return(c(mean_da, sd_da))
}
displayPerformance(walk_top)
displayPerformance(walk_lefthand)
displayPerformance(walk_righthand)
displayPerformance(walk_leftpants)
displayPerformance(walk_rightpants)
walk_top = read.csv("./new_exp/datas/performace/top.csv",header = F)
walk_lefthand = read.csv("./new_exp/datas/performace/Lefthand.csv",header = F)
walk_righthand = read.csv("./new_exp/datas/performace/Righthand.csv",header = F)
walk_leftpants = read.csv("./new_exp/datas/performace/Leftpants.csv",header = F)
walk_rightpants = read.csv("./new_exp/datas/performace/Rightpants.csv",header = F)
displayPerformance = function(da){
mean_da = sapply(da, mean)
sd_da = sapply(da, sd)
matplot(da[,1],type="l")
return(c(mean_da, sd_da))
}
displayPerformance(walk_top)
displayPerformance(walk_lefthand)
displayPerformance(walk_righthand)
displayPerformance(walk_leftpants)
displayPerformance(walk_rightpants)
walk_top = read.csv("./new_exp/datas/performace/top.csv",header = F)
walk_lefthand = read.csv("./new_exp/datas/performace/Lefthand.csv",header = F)
walk_righthand = read.csv("./new_exp/datas/performace/Righthand.csv",header = F)
walk_leftpants = read.csv("./new_exp/datas/performace/Leftpants.csv",header = F)
walk_rightpants = read.csv("./new_exp/datas/performace/Rightpants.csv",header = F)
displayPerformance = function(da){
mean_da = sapply(da, mean)
sd_da = sapply(da, sd)
matplot(da[,1],type="l", ylab = "degree", xlab = "expId")
return(c(mean_da, sd_da))
}
displayPerformance(walk_top)
displayPerformance(walk_lefthand)
displayPerformance(walk_righthand)
displayPerformance(walk_leftpants)
displayPerformance(walk_rightpants)
run_top = read.csv("./new_exp/datas/performace/Runtop.csv",header = F)
run_top
run_top = read.csv("./new_exp/datas/performace/Runtop.csv",header = F)
run_pants = read.csv("./new_exp/datas/performace/Runpants.csv",header = F)
run_lrhand = read.csv("./new_exp/datas/performace/Runlrhand.csv",header = F)
run_lrhand
displayPerformance(run_pants)
run_pants
displayPerformance(run_pants)
walk_top = read.csv("./new_exp/datas/performace/top.csv",header = F)
walk_lefthand = read.csv("./new_exp/datas/performace/Lefthand.csv",header = F)
walk_righthand = read.csv("./new_exp/datas/performace/Righthand.csv",header = F)
walk_leftpants = read.csv("./new_exp/datas/performace/Leftpants.csv",header = F)
walk_rightpants = read.csv("./new_exp/datas/performace/Rightpants.csv",header = F)
run_top = read.csv("./new_exp/datas/performace/Runtop.csv",header = F)
run_pants = read.csv("./new_exp/datas/performace/Runpants.csv",header = F)
run_lrhand = read.csv("./new_exp/datas/performace/Runlrhand.csv",header = F)
displayPerformance = function(da, tag = ""){
mean_da = sapply(da, mean)
sd_da = sapply(da, sd)
matplot(da[,],type="l", ylab = "degree", xlab = "expId")
return(c(mean_da, sd_da))
}
displayPerformance(walk_top)
displayPerformance(walk_lefthand)
displayPerformance(walk_righthand)
displayPerformance(walk_leftpants)
displayPerformance(walk_rightpants)
displayPerformance(run_pants)
displayPerformance(run_lrhand)
displayPerformance(run_top)
displayPerformance(run_pants)
displayPerformance(run_lrhand)
displayPerformance(run_top)
displayPerformance(run_pants)
displayPerformance(run_lrhand)
displayPerformance(run_top)
run_top = read.csv("./new_exp/datas/performace/Runtop.csv",header = F)
run_pants = read.csv("./new_exp/datas/performace/Runpants.csv",header = F)
run_hands = read.csv("./new_exp/datas/performace/Runlrhand.csv",header = F)
jump_pants = read.csv("./new_exp/datas/performace/Jumplrpants.csv",header = F)
displayPerformance(jump_pants)
displayPerformance(jump_pants)
jump_pants
displayPerformance(run_hands)
displayPerformance(jump_pants)
displayPerformance(run_pants)
displayPerformance(run_hands)
displayPerformance(jump_pants)
displayPerformance(run_top)
displayPerformance(run_pants)
displayPerformance(run_hands)
displayPerformance(jump_pants)
displayPerformance(run_pants)
jump_pants -90
displayPerformance(90-run_hands)
displayPerformance(90-jump_pants)
displayPerformance(run_pants)
displayPerformance(run_top)
displayPerformance(walk_top)
displayPerformance(walk_lefthand)
displayPerformance(walk_righthand)
displayPerformance(walk_leftpants)
displayPerformance(walk_rightpants)
displayPerformance(run_top)
displayPerformance(run_pants)
displayPerformance(90-run_hands)
displayPerformance(90-jump_pants)
displayPerformance(walk_top)
displayPerformance(walk_lefthand)
displayPerformance(walk_righthand)
displayPerformance(walk_leftpants)
displayPerformance(walk_rightpants)
displayPerformance(run_top)
displayPerformance(run_pants)
displayPerformance(90-run_hands)
displayPerformance(90-jump_pants)
displayPerformance(run_top)
displayPerformance(run_pants)
displayPerformance(90-run_hands)
displayPerformance(90-jump_pants)
displayPerformance(90-jump_pants)
displayPerformance(walk_top)
displayPerformance(walk_lefthand)
displayPerformance(walk_righthand)
displayPerformance(walk_leftpants)
displayPerformance(walk_rightpants)
displayPerformance(walk_top)
displayPerformance = function(da, offset = 0){
mean_da = sapply(da, mean)
sd_da = sapply(da, sd)
matplot(da[,],type="l", ylab = "degree", xlab = "expId")
return(round(c(mean_da, sd_da), 2))
}
displayPerformance(walk_top)
displayPerformance(walk_lefthand)
displayPerformance(walk_righthand)
displayPerformance(walk_leftpants)
displayPerformance(walk_rightpants)
displayPerformance(run_top)
displayPerformance(run_pants)
displayPerformance(90-run_hands)
displayPerformance(90-jump_pants)
displayPerformance(run_top)
displayPerformance(run_pants)
displayPerformance(90-run_hands)
displayPerformance(90-jump_pants)
